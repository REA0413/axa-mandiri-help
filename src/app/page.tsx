'use client';
import { useState, useEffect } from "react";
import { FiMail } from "react-icons/fi";
import { FaXTwitter } from "react-icons/fa6";

export default function Home() {
  const [priceData, setPriceData] = useState<{ price: number; timestamp: string } | null>(null);
  const [loading, setLoading] = useState(true);
  const [email, setEmail] = useState("");
  const [investmentAmount, setInvestmentAmount] = useState("");
  const [buyingPrice, setBuyingPrice] = useState("");
  const [subscribeStatus, setSubscribeStatus] = useState<string>('');

  useEffect(() => {
    const fetchPrice = async () => {
      try {
        const response = await fetch('/api/price');
        const data = await response.json();
        setPriceData(data);
      } catch (error) {
        console.error('Error fetching price:', error);
      } finally {
        setLoading(false);
      }
    };

    fetchPrice();
  }, []);

  const handleEmailSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setSubscribeStatus('submitting');
    
    try {
      const response = await fetch('/api/subscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error);
      }

      setSubscribeStatus('success');
      setEmail('');
    } catch (error) {
      setSubscribeStatus('error');
      console.error('Subscription error:', error);
    }
  };

  const calculateReturnAmount = () => {
    if (!investmentAmount || !buyingPrice) return { units: 0, returnAmount: 0, profitLoss: 0 };
    
    const cleanInvestmentAmount = investmentAmount.replace(/,/g, '');
    const units = parseFloat(cleanInvestmentAmount) / parseFloat(buyingPrice);
    const currentPrice = priceData?.price || 0;
    const returnAmount = units * currentPrice;
    const profitLoss = returnAmount - parseFloat(cleanInvestmentAmount);
    
    return { units, returnAmount, profitLoss };
  };

  return (
    <div className="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-3xl mx-auto space-y-8">
        {/* Header Section */}
        <div className="bg-white rounded-lg shadow p-6">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">
            Welcome to AXA-Mandiri Insurance Investment Fund Tracker
          </h1>
          <p className="text-gray-600 mb-4">
            Hi, I created this website to help you track the price of AXA-Mandiri Insurance Investment Fund, to be specific the price of the Mandiri Attractive Equity Money Rupiah (ATRP).
          </p>
          <p className="text-gray-600 mb-4">
            The reason I created this website is to help the owner of this investment fund to easily track the selling price and make an informed decision to reduce the loss generated by this poor investment product.
          </p>
          <p className="text-gray-600">
            If you need other AXA-Mandiri insurance investment products other than ATRP to be listed here, just drop me an email using the email button on the bottom of this app.
          </p>
        </div>

        {/* Yesterday's Sell Price */}
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-lg font-semibold text-gray-700 mb-2">Yesterday's Sell Price</h2>
          <p className="text-gray-600 mb-2">
            If you sell your investment to AXA-Mandiri yesterday, this is the price per unit you will get.
          </p>
          {loading ? (
            <div>Loading...</div>
          ) : priceData ? (
            <>
              <div className="text-3xl font-bold text-blue-600">
                IDR {priceData.price.toLocaleString()}
              </div>
              <div className="text-sm text-gray-500 mt-2">
                Last updated: {new Date(priceData.timestamp).toLocaleDateString()}
              </div>
            </>
          ) : (
            <div>Failed to load price</div>
          )}
        </div>

        {/* Investment Calculator */}
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-lg font-semibold text-gray-700 mb-4">Investment Calculator</h2>
          <p className="text-gray-600 text-sm mb-4">
            <em>Use this simple calculator to generate an estimate of the potential returned fund amount.<br/>The investment amount and the buying price are available in your insurance policy or monthly investment email update.</em>
          </p>
          <div className="space-y-4">
            <div>
              <label htmlFor="investment" className="block font-medium text-gray-700">
                Investment Amount (IDR)
              </label>
              <input
                type="text"
                id="investment"
                value={investmentAmount}
                onChange={(e) => {
                  const value = e.target.value.replace(/,/g, '');
                  setInvestmentAmount(value.replace(/\B(?=(\d{3})+(?!\d))/g, ','));
                }}
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="1,000,000"
              />
            </div>
            <div>
              <label htmlFor="buyingPrice" className="block font-medium text-gray-700">
                Unit Buying Price (IDR)
              </label>
              <input
                type="number"
                id="buyingPrice"
                value={buyingPrice}
                onChange={(e) => setBuyingPrice(e.target.value)}
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="100"
              />
            </div>
          </div>
        </div>

        {/* Potential Return */}
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-lg font-semibold text-gray-700 mb-2">Investment Summary</h2>
          {investmentAmount && buyingPrice ? (
            <>
              <div className="space-y-2">
                <div>
                  <span className="text-gray-600">Number of Units Owned: </span>
                  <span className="font-semibold">{calculateReturnAmount().units.toFixed(2)}</span>
                </div>
                <div>
                  <span className="text-gray-600">Potential Returned Fund Amount: </span>
                  <span className="font-bold text-blue-600">
                    IDR {calculateReturnAmount().returnAmount.toLocaleString()}
                  </span>
                </div>
                <div>
                  <span className="text-gray-600">Estimated Profit/Loss: </span>
                  <span className={`font-bold ${calculateReturnAmount().profitLoss >= 0 ? 'text-green-600' : 'text-red-600'}`}>
                    IDR {calculateReturnAmount().profitLoss.toLocaleString()}
                  </span>
                </div>
              </div>
              <div className="text-xs text-gray-500 mt-4">
                <em>This summary is generated based on yesterday's selling price</em>
              </div>
            </>
          ) : (
            <div className="text-gray-500">
              Enter investment amount and buying price to see potential return
            </div>
          )}
        </div>

        {/* Email Subscription Form */}
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-lg font-semibold text-gray-700 mb-4">Subscribe for Updates</h2>
          <p className="text-gray-600 mb-4">
            If you want to get a daily update of the selling price, please enter your email address below.
          </p>
          <form onSubmit={handleEmailSubmit} className="space-y-4">
            <div>
              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
                Email Address
              </label>
              <input
                type="email"
                id="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                placeholder="your@email.com"
                required
              />
            </div>
            <button
              type="submit"
              className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
            >
              Subscribe
            </button>
          </form>
        </div>

        <div className="mt-6 text-center space-y-4">
        <div className="flex justify-center gap-4">
          <a
            href="mailto:cctozfnt@gmail.com"
            className="text-gray-500 hover:text-gray-700 transition-colors"
            aria-label="Email"
          >
            <FiMail size={24} />
          </a>
          <a
            href="https://twitter.com/andong_ff"
            target="_blank"
            rel="noopener noreferrer"
            className="text-gray-500 hover:text-gray-700 transition-colors"
            aria-label="Twitter"
          >
            <FaXTwitter size={22} />
          </a>
        </div>
        
        <div className="space-y-1">
          <a
            href="http://www.onlinewebfonts.com"
            target="_blank"
            rel="noopener noreferrer"
            className="text-xs text-gray-400 block"
          >
            Web Fonts Author Credit
          </a>
        </div>
      </div>
        
      </div>
    </div>
  );
}
